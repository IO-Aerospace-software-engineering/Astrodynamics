
name: IO SDK Deployment

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build/IO.SDK.Tests
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ./IO.SDK.Tests

      - name: Copy Headers and library
        run: |
          mkdir -p Toolkit/Linux/Includes
          find IO.SDK/ -type f -name "*.h" -exec cp {} Toolkit/Linux/Includes/ \;
          cp -f build/IO.SDK/libIO.SDK.so Toolkit/Linux/
          zip -r IO-Toolkit.zip Toolkit

      - name: Copy solar system data and templates
        run: |
          mkdir -p Toolkit/Linux/Data/SolarSystem
          mkdir -p Toolkit/Linux/Templates
          find build/IO.SDK.Tests/Data/SolarSystem/ -type f -name "*.*" -exec cp {} Toolkit/Linux/Data/SolarSystem \;
          find build/IO.SDK.Tests/Templates/ -type f -name "*.*" -exec cp {} Toolkit/Linux/Templates \;         
          zip -r IO-Toolkit.zip Toolkit

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
          draft: false
          prerelease: true

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: IO-Toolkit.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
